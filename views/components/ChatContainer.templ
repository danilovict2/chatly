package components

import "github.com/danilovict2/go-real-time-chat/models"

templ ChatContainer(sender, receiver models.User, messages []models.Message) {
	<div class="flex-1 flex flex-col overflow-auto">
		@ChatHeader(receiver)
		<div class="flex-1 overflow-y-auto p-4 space-y-4">
			for _, message := range messages {
				<div class={ "chat", templ.KV("chat-end", message.SenderID != receiver.ID), templ.KV("chat-start", message.SenderID == receiver.ID) }>
					<div class="chat-image avatar">
						<div class="size-10 rounded-full border">
							if message.SenderID == receiver.ID {
								<img
									src={ Avatar(receiver) }
									alt={ receiver.Username }
								/>
							} else {
								<img
									src={ Avatar(sender) }
									alt={ sender.Username }
								/>
							}
						</div>
					</div>
					<div class="chat-header mb-1">
						<time class="text-xs opacity-50 ml-1">
							{ message.CreatedAt.Format("3:4 PM") }
						</time>
					</div>
					<div class="chat-bubble flex flex-col">
						if len(message.Image) > 0 {
							<img
								src={ message.Image }
								alt="Attachment"
								className="sm:max-w-[200px] rounded-md mb-2"
							/>
						}
						<p>{ message.Text }</p>
					</div>
				</div>
			}
		</div>
		@MessageInput(receiver)
	</div>
}
